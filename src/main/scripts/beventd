#!/bin/sh

[[ -z "$BOUNDARY_SDK_HOME" ]]  && echo "BOUNDARY_SDK_HOME is not set. Set to top-level directory of the distribution" && exit 1

# Set the location of the commons daemon binary 
EXEC=$BOUNDARY_SDK_HOME/bin/jsvc

# Contains all of the jars that the Boundary Event SDK is dependent upon
DEPENDENT_JARS="$BOUNDARY_SDK_HOME/lib/*"

# Create class path variable for the Boundary Event SDK configuration files
CONFIG_DIR="$BOUNDARY_SDK_HOME/etc"
CONFIG_PATHS=$(CONFIGS=(`find "$CONFIG_DIR" -type d -print`); IFS=:; echo "${CONFIGS[*]}")

# 1) Add the path to the xml and property files first so files in these directories are found first.
# 2) Add the Boundary Event SDK jar
# NOTE: There is an assumption that only one boundary-event-sdk jar file will be present in the distribution.
SDK_CLASSPATH="$CONFIG_PATHS:${BOUNDARY_SDK_HOME}/boundary-event-sdk-*.jar:${DEPENDENT_JARS}"

# Entry point class to start the Boundary Event SDK
CLASS=com.boundary.sdk.event.BoundaryEventDaemon

# Daemon bindary, jsvc, will change to the user if run under root priviledges
USER=$USER

# Stores the process id of the running boundary event SDK instance
PID=${BOUNDARY_SDK_HOME}/var/beventd.pid

# Define output locations for logging of standard out and standard error
LOG_OUT=${BOUNDARY_SDK_HOME}/logs/beventd.log
LOG_ERR=${BOUNDARY_SDK_HOME}/logs/beventd.err.log
# Redirect standard error into standard out
LOG_ERR="&1"

do_exec()
{
    $EXEC -home "$JAVA_HOME" -cp "$SDK_CLASSPATH" -user "$USER" -server -Dboundary.application.context.uri="file:$BOUNDARY_SDK_HOME/etc/event-application.xml" -outfile "$LOG_OUT" -errfile "$LOG_ERR" -pidfile "$PID" $1 "$CLASS"
}

case "$1" in
    start)
        if [ ! -f "$PID" ]; then
            do_exec
        else
            echo "$(basename $0) is already running"
            exit 1
        fi  
            ;;
    stop)
        do_exec "-stop"
            ;;
    restart)
        if [ -f "$PID" ]; then
            do_exec "-stop"
            do_exec
        else
            echo "$(basename $0) service not running, will do nothing"
            exit 1
        fi
            ;;
    *)
            echo "usage: $(basename $0) {start|stop|restart}" >&2
            exit 3
            ;;
esac
